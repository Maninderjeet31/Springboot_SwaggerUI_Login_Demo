openapi: 3.0.0
info:
  title: User Login API - OpenAPI 3.0
  description: |
    PNC SpringBoot-OpenAPI Assignment.
    
    This application uses Spring boot and OpenAPI 3 
    
    And it demonstrates the login with validation criteria

  termsOfService: http://example.com/terms/
  contact:
    name: Maninderjeet Singh
    email: maninderjeet.singh@example.com
  license:
    name: License No - N/A
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Development environment
  - url: http://localhost:8080
    description: Testing environment

tags:
  - name: User
    description: Login with user credentials

paths:
  /users/login/username/{username}/password/{password}/ipaddress/{ipaddress}:
    get:
      tags:
        - User
      summary: Logins with username, password and Canada's geo-location
      parameters:
        - name: username
          in: path
          description: 'The username cannot be empty.'
          required: true
          schema:
            type: string
            minLength: 1
        - name: password
          in: path
          required: true
          description:
            >
            
            Password must have 

             1.at least 8 characters long, 
            
             2.contains at least 1 Capitalized letter
            
             3.contains at least 1 number  
            
             4.contains at least one of the following: _ # $ %

          schema:
            type: string
            format: password
            minLength: 8
            pattern: "^(?=.*[A-Z])(?=.*[0-9])(?=.*[_#$%])[A-Za-z0-9_#$%]{8}$"
        - name: ipaddress
          in: path
          required: true
          description: 'The IP-address cannot be empty.'
          schema:
            minLength: 1
            type: string
      responses:
        '200':
          description: A success message.
          content:
            text/plain:
              schema:
                type: string
              example:
                >
                ID: xxxxxxxx-xxxx..
                
                Welcome user from Montreal
        '400':
          description: Any specified value is invalid.
        '404':
          description: The User with specified credentials is not found.
        '500':
          description: Encountered some error.
        default:
          description: Unexpected error.


components:
  schemas:
    User:
      required:
        - username
        - password
        - ipaddress
      type: object
      properties:
        username:
          type: string
          minLength: 1
          example: user1
        password:
          type: string
          format: password
          minLength: 8
          pattern: "^(?=.*[A-Z])(?=.*[0-9])(?=.*[_#$%])[A-Za-z0-9_#$%]{8}$"
          example: Abc_1234
        ipaddress:
          type: string
          minimum: 1
          example: 123.456.789.000
